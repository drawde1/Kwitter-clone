{"version":3,"sources":["redux/actions/user.js","redux/actions/auth.js","redux/actions/index.js","redux/actions/messages.js","utils/api.js","serviceWorker.js","components/loader/Loader.js","components/login-form/LoginForm.js","components/menu/Menu.js","screens/Home.js","components/functions/createTimestamp.js","components/feed/Message.js","redux/actions/infiniteScroll.js","components/profile/profile.js","screens/Profile.js","screens/NotFound.js","screens/Feed.js","screens/UsersList.js","components/connected-route/ConnectedRoute.js","components/navigation/Navigation.js","components/feed/Feed.js","components/users/User.js","components/users/UsersList.js","redux/reducers/auth.js","redux/reducers/user.js","redux/reducers/updateUser.js","redux/reducers/likes.js","redux/reducers/messages.js","redux/reducers/messagesList.js","redux/reducers/getUser.js","redux/reducers/infiniteScroll.js","redux/reducers/getMessageListByUser.js","redux/reducers/getUserList.js","redux/reducers/index.js","redux/configureStore.js","App.js","index.js"],"names":["ADD_USER_LOAD","ADD_USER_FAIL","ADD_USER","UPDATE_USER_LOAD","UPDATE_USER_FAIL","UPDATE_USER","GET_USER_LOAD","GET_USER_FAIL","GET_USER","DELETE_USER_LOAD","DELETE_USER_FAIL","DELETE_USER","GET_USER_LIST_LOAD","GET_USER_LIST_FAIL","GET_USER_LIST","user","credentials","dispatch","getState","a","type","api","adduser","payload","message","getUserList","userListParams","_deleteUser","deleteUser","then","actions","logout","_updateuser","updateuser","getUserInfo","username","getUser","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","login","DELETE_MESSAGE_LOAD","DELETE_MESSAGE","DELETE_MESSAGE_FAIL","ADD_MESSAGE","ADD_MESSAGE_FAIL","ADD_MESSAGE_LOAD","DELETE_LIKE","GET_MESSAGE_LIST_LOAD","GET_MESSAGE_LIST_FAIL","GET_MESSAGE_LIST","LIKE_SUCCESS","DELETE_SUCCESS","DELETE_FAILURE","GET_MESSAGE_LIST_USER_LOAD","GET_MESSAGE_LIST_USER_FAIL","GET_MESSAGE_LIST_USER","_addMessage","text","addMessage","getMessageList","limit","offset","msgParams","_likes","messageId","likes","getMessageListByUser","profileLikes","profileDeleteLikes","id","_deleteLikes","deleteLikes","_deleteMessage","deleteMsg","console","log","deleteMessage","profileDeleteMessage","API","axiosInstance","axios","create","baseURL","timeout","headers","Authorization","getToken","interceptors","request","use","config","error","Promise","reject","response","data","this","displayName","password","post","result","helpMeInstructor","get","about","patch","delete","picture","put","err","info","storedState","JSON","parse","localStorage","getItem","auth","isAuthenticated","Boolean","window","location","hostname","match","Loader","class","LoginForm","useSelector","state","loading","useDispatch","useState","setState","isToggled","setToggle","isToggled2","setToggle2","INITIALSTATE","registerState","setRegisterState","handleChange","event","inputName","target","name","inputValue","value","prevState","handleRegChange","Fragment","onSubmit","preventDefault","className","htmlFor","autoFocus","required","onChange","disabled","style","color","Menu","src","to","onClick","HomeScreen","reformateTime","messyTime","time","split","splice","hourArr","minute","join","hourStr","hour","parseInt","timeOfday","reformateDate","messyDate","date","yearArr","dayArr","year","day","month","reformatMonth","Message","props","messyTimeStamp","yourLike","messagListParams","infiniteScroll","msgListParams","timestamp","createdAt","disClick","setDisClick","userPhoto","width","height","tabIndex","msgId","profile","length","like","handleUnlike","amountToAdd","restInfiniteScroll","initialSize","Profile","loadingUserInfo","startingUsername","userPicture","pictureLocation","bio","count","messageList","messages","useRef","useEffect","addPic","picdata","FormData","current","Api","addPicture","ref","onScroll","currentTarget","scrollHeight","clientHeight","scrollTop","map","key","ProfileScreen","NotFoundScreen","pathname","Feed","UsersList","ConnectedRoute","isProtected","redirectIfAuthenticated","ComponentToRender","component","rest","Error","render","from","renderedProps","defaultProps","Navigation","exact","path","loadingList","msg","User","userList","users","userListLoader","INITIAL_STATE","displayname","deletedMsg","defaultUserReducer","action","DEFAULT_STATE","likesReducer","LIKES","memberId","likeId","createdAT","delete_message","updatedAt","combineReducers","pic","picReducer","token","addUser","updateUser","addMsg","addLikeReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","KWITTER","App","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.672234e7.chunk.js","sourcesContent":["import api from '../../utils/api'\nimport {actions} from'./auth'\nexport const ADD_USER_LOAD = 'ADD_USER_LOAD'\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL'\nexport const ADD_USER = 'ADD_USER'\nexport const UPDATE_USER_LOAD = 'UPDATE_USER_LOAD'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\nexport const UPDATE_USER = 'UPDATE_USER'\nexport const GET_USER_LOAD  = 'GET_USER_LOAD '\nexport const GET_USER_FAIL = 'GET_USER_FAIL'\nexport const GET_USER = 'GET_USER'\nexport const DELETE_USER_LOAD = \"DELETE_USER_LOAD\";\nexport const DELETE_USER_FAIL = \"DELETE_USER_FAIL\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const GET_USER_LIST_LOAD = \"GET_USER_LIST_LOAD\";\nexport const GET_USER_LIST_FAIL = \"GET_USER_LIST_FAIL\";\nexport const GET_USER_LIST = \"GET_USER_LIST\";\n\n\n\nexport const user = credentials => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ADD_USER_LOAD });\n    const payload = await api.adduser(credentials);\n\n    dispatch({ type: ADD_USER, payload });\n  } catch (err) {\n    dispatch({\n      type: ADD_USER_FAIL,\n      payload: err.message,\n    });\n  }\n};\n\nexport const getUserList = userListParams => async (dispatch, getState) => {\n  try {\n    dispatch({ type: GET_USER_LIST_LOAD });\n    const payload = await api.getUserList(userListParams);\n  \n    dispatch({ type: GET_USER_LIST, payload });\n  } catch (err) {\n    dispatch({\n      type: GET_USER_LIST_FAIL,\n      payload: err.message,\n    });\n  }\n};\n\nexport const _deleteUser = credentials => async (dispatch, getState) => {\n  try {\n    dispatch({ type: DELETE_USER_LOAD});\n  \n    const payload = await api.deleteUser(credentials);\n\n    dispatch({ type: DELETE_USER, payload });\n  } catch (err) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: err.message,\n    });\n  }\n};\nexport const deleteUser = (credentials) => async (dispatch, getState) => {\n  return dispatch(_deleteUser(credentials))\n  .then(() => {return dispatch(actions.logout())})\n};\n\nexport const _updateuser = credentials => async (dispatch, getState) => {\n  \n  try {\n    dispatch({ type:UPDATE_USER_LOAD});\n    const payload = await api.updateuser(credentials);\n    dispatch({ type: UPDATE_USER, payload });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: err.message,\n    });\n  }\n};\nexport const updateuser = (credentials) => async (dispatch, getState) => {\n  return dispatch(_updateuser(credentials))\n  .then(() => {return dispatch(getUserInfo(credentials.username))})\n};\n\n\nexport const getUserInfo = username => async (dispatch, getState) => {\n  try {\n    dispatch({ type: GET_USER_LOAD });\n    const payload = await api.getUser(username);\n\n    dispatch({ type: GET_USER, payload });\n  } catch (err) {\n    dispatch({\n      type: GET_USER_FAIL,\n      payload: err.message,\n    });\n  }\n};\n","import api from \"../../utils/api\";\n\n// AUTH CONSTANTS\nexport const LOGIN = \"AUTH/LOGIN\";\nexport const LOGIN_SUCCESS = \"AUTH/LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"AUTH/LOGIN_FAILURE\";\nexport const LOGOUT = \"AUTH/LOGOUT\";\n\n/*\n AUTH ACTIONS (this is a thunk....)\n THUNKS: --> https://github.com/reduxjs/redux-thunk#whats-a-thunk\n If you need access to your store you may call getState()\n*/\nconst login = (credentials) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: LOGIN });\n    const payload = await api.login(credentials);\n    dispatch({ type: LOGIN_SUCCESS, payload });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err.message,\n    });\n  }\n};\n\nconst logout = () => async (dispatch, getState) => {\n  try {\n    // We do not care about the result of logging out\n    // as long as it succeeds\n    await api.logout();\n  } finally {\n    /**\n     * Let the reducer know that we are logged out\n     */\n    dispatch({ type: LOGOUT });\n  }\n};\n// END AUTH ACTIONS\n\nexport const actions = {\n  login,\n  logout,\n};\n","export * from \"./auth\"\nexport * from \"./photos\"\nexport * from \"./messages\"\nexport * from \"./user\"\nexport * from \"./likes\"\n","import api from \"../../utils/api\";\nexport const DELETE_MESSAGE_LOAD = 'DELETE_MESSAGE_LOAD';\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\nexport const DELETE_MESSAGE_FAIL = 'DELETE_MESSAGE_FAIL';\nexport const ADD_MESSAGE= 'ADD_MESSAGE'\nexport const ADD_MESSAGE_FAIL= 'ADD_MESSAGE_FAIL'\nexport const ADD_MESSAGE_LOAD= 'ADD_MESSAGE_LOAD'\nexport const ADD_LIKE = 'ADD_LIKE'\nexport const DELETE_LIKE = 'DELETE_LIKE'\nexport const GET_MESSAGE_LIST_LOAD = 'GET_MESSAGE_LIST_LOAD'\nexport const GET_MESSAGE_LIST_FAIL = 'GET_MESSAGE_LIST_FAIL'\nexport const GET_MESSAGE_LIST = 'GET_MESSAGE_LIST'\nexport const LIKE_FAILURE = 'LIKE_FAILURE'\nexport const LIKE_SUCCESS = 'LIKE_SUCCESS'\nexport const DELETE_SUCCESS = 'DELETE_SUCCESS'\nexport const DELETE_FAILURE = 'DELETE_FAILURE'\nexport const GET_MESSAGE_LIST_USER_LOAD = 'GET_MESSAGE_LIST_USER_LOAD'\nexport const GET_MESSAGE_LIST_USER_FAIL = 'GET_MESSAGE_LIST_USER_FAIL'\nexport const GET_MESSAGE_LIST_USER= 'GET_MESSAGE_LIST_USER'\n\nexport const _addMessage= (text) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ADD_MESSAGE_LOAD});\n      const payload = await api.addMessage(text);\n        \n      dispatch({ type: ADD_MESSAGE, payload });\n    } catch (err) {\n      dispatch({\n        type: ADD_MESSAGE_FAIL,\n        payload: err.message,\n      });\n    }\n  };\n  export const addMessage = (text) => async (dispatch, getState) => {\n    return dispatch(_addMessage(text))\n    .then(() => {return dispatch(getMessageList({limit:10, offset:0}))})\n  };\n\n  export const getMessageList = (msgParams) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: GET_MESSAGE_LIST_LOAD})\n      const payload = await api.getMessageList(msgParams);\n      dispatch({ type: GET_MESSAGE_LIST, payload });\n    } catch (err) {\n      dispatch({\n        type:GET_MESSAGE_LIST_FAIL,\n        payload: err.message,\n      });\n    }\n  };\n\n\n\nexport const _likes = (messageId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ADD_LIKE });\n    const payload = await api.likes(messageId);\n    dispatch({ type: LIKE_SUCCESS, payload})\n  } catch (err) {\n    dispatch({\n      type: LIKE_FAILURE,\n      payload: err.message,\n    });\n  }\n};\n\nexport const getMessageListByUser = (msgParams,username) => async (dispatch, getState) => {\n  try {\n    dispatch({ type:GET_MESSAGE_LIST_USER_LOAD});\n    const payload = await api.getMessageListByUser(msgParams,username);\n    dispatch({ type: GET_MESSAGE_LIST_USER, payload });\n  } catch (err) {\n    dispatch({\n      type: GET_MESSAGE_LIST_USER_FAIL,\n      payload: err.message,\n    });\n  }\n};\nexport const likes = (messageId,msgParams) => async (dispatch, getState) => {\n  return dispatch(_likes(messageId))\n  .then(() => {return dispatch(getMessageList(msgParams))})\n};\n\nexport const profileLikes = (messageId,msgParams, username) => async (dispatch, getState) => {\n  return dispatch(_likes(messageId))\n  .then(() => {return dispatch(getMessageListByUser(msgParams, username))})\n};\nexport const profileDeleteLikes = (id,msgParams,username) => async (dispatch, getState) => {\n  return dispatch(_deleteLikes(id))\n  .then(() => {return dispatch(getMessageListByUser(msgParams, username))})\n};\nexport const _deleteLikes = (id,msgParams) => async (dispatch, getState) => {\n  \n  try {\n    dispatch({ type: DELETE_LIKE });\n    const payload = await api.deleteLikes(id);\n    dispatch({ type: DELETE_SUCCESS, payload})\n  } catch (err) {\n    dispatch({\n      type: DELETE_FAILURE,\n      payload: err.message,\n    });\n  }\n};\nexport const deleteLikes = (id,msgParams) => async (dispatch, getState) => {\n  return dispatch(_deleteLikes(id))\n  .then(() => {return dispatch(getMessageList(msgParams))})\n};\n\nexport const _deleteMessage = (messageId) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: DELETE_MESSAGE_LOAD})\n      const payload = await api.deleteMsg(messageId);\n        console.log(payload)\n      dispatch({ type: DELETE_MESSAGE, payload });\n    } catch (err) {\n      dispatch({\n        type: DELETE_MESSAGE_FAIL,\n        payload: err.message,\n      });\n    }\n  };\n  export const deleteMessage = (messageId,msgParams) => async (dispatch, getState) => {\n    return dispatch(_deleteMessage(messageId))\n    .then(() => {return dispatch(getMessageList(msgParams))})\n  };\n\n  export const profileDeleteMessage = (messageId,msgParams,username) => async (dispatch, getState) => {\n    return dispatch(_deleteMessage(messageId))\n    .then(() => {return dispatch(getMessageListByUser(msgParams,username))})\n  };\n\n  ","import axios from \"axios\";\n\nclass API {\n  axiosInstance = null;\n\n  constructor () {\n    /* \n      🚨1 point EXTRA CREDIT 🚨 👉🏿 get the baseURL from the environment\n      https://create-react-app.dev/docs/adding-custom-environment-variables/\n    */\n    const axiosInstance = axios.create({\n      baseURL: \"https://kwitter-api.herokuapp.com/\",\n      timeout: 30000,\n      headers: { Authorization: `Bearer ${getToken()}` },\n    });\n\n    // Add a request interceptor to attach a\n    axiosInstance.interceptors.request.use(\n      config => ({\n        ...config,\n        headers: {\n          ...config.headers,\n          Authorization: `Bearer ${getToken()}`,\n        },\n      }),\n      error => Promise.reject(error)\n    );\n\n    // Add a response interceptor\n    axiosInstance.interceptors.response.use(\n      ({ data }) => data,\n      error => Promise.reject(error)\n    );\n\n    this.axiosInstance = axiosInstance;\n  }\n\n  async adduser ({ username, displayName, password }) {\n    try {\n      const result = await this.axiosInstance.post(\"/users\", {\n        username,\n        displayName,\n        password,\n      });\n\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n  async getUser(username) {\n    try {\n    const result = await this.axiosInstance.get(\"/users/\"+username)\n      \n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async addMessage ({ text }) {\n    try {\n      const result = await this.axiosInstance.post(\"/messages\", {\n        text,\n      });\n\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async getMessageList ({ limit, offset }) {\n    try {\n      const result = await this.axiosInstance.get(\n        \"/messages?limit=\" + limit + \"&offset=\" + offset,\n        {\n          limit,\n          offset,\n        }\n      );\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async getMessageListByUser ({ limit, offset }, username) {\n    try {\n      const result = await this.axiosInstance.get(\n        \"/messages?limit=\" +\n          limit +\n          \"&offset=\" +\n          offset +\n          \"&username=\" +\n          username,\n        {\n          limit,\n          offset,\n          username,\n        }\n      );\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async updateuser ({ password, about, displayName, username }) {\n    try {\n      const result = await this.axiosInstance.patch(`/users/${username}`, {\n        password,\n        about,\n        displayName,\n      });\n\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async deleteUser (username) {\n    try {\n      const result = await this.axiosInstance.delete(`/users/${username}`,\n      {\n        username\n      });\n\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async deleteMsg (messageId) {\n    try {\n      const result = await this.axiosInstance.delete(\"/messages/\" + messageId, {\n        messageId,\n      });\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async login ({ username, password }) {\n    try {\n      const result = await this.axiosInstance.post(\"/auth/login\", {\n        username,\n        password,\n      });\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async logout () {\n    try {\n      await this.axiosInstance.get(\"/auth/logout\");\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async likes (messageId) {\n    try {\n      const result = await this.axiosInstance.post(\"/likes\", {\n        messageId,\n      });\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async deleteLikes (id) {\n   \n    try {\n      \n      const result = await this.axiosInstance.delete(\"/likes/\" + id);\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n\n  async addPicture (username, picture) {\n    try {\n      const result = await this.axiosInstance.put(\n        \"/users/\" + username + \"/picture\",\n        picture\n      );\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n  \n  async getUserList ({limit, offset}) {\n    try {\n      const result = await this.axiosInstance.get(\n        \"/users?limit=\"+limit+\"&offset=\"+ offset,\n        {limit,offset}\n      \n      );\n      return result;\n    } catch (err) {\n      helpMeInstructor(err);\n      throw err;\n    }\n  }\n}\n\n// WARNING.. do not touch below this line if you want to have a good day =]\n\nfunction helpMeInstructor (err) {\n  console.info(\n    `\n    Did you hit CORRECT the endpoint?\n    Did you send the CORRECT data?\n    Did you make the CORRECT kind of request [GET/POST/PATCH/DELETE]?\n    Check the Kwitter docs 👉🏿 https://kwitter-api.herokuapp.com/docs/#/\n    Check the Axios docs 👉🏿 https://github.com/axios/axios\n    TODO: troll students\n  `,\n    err\n  );\n}\n\nfunction getToken () {\n  try {\n    const storedState = JSON.parse(localStorage.getItem(\"persist:root\"));\n    return JSON.parse(storedState.auth).isAuthenticated;\n  } catch {\n    return \"\";\n  }\n}\n\nexport default new API();\n// \"I have a good idea of what I need to do with the API, but I'm a little unsure about where I should be implementing it. I am also not strong on redux.\"\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\n\nexport const Loader = () => \n<>\n    <div class=\"ui segment\">\n    <p></p>\n    <div class=\"ui active dimmer\">\n    <div class=\"ui loader\"></div>\n    </div>\n    </div>\n</>;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/auth\";\nimport { Loader } from \"../loader\";\nimport \"./LoginForm.css\";\nimport {user} from '../../redux/actions/user'\n\nexport const LoginForm = ({ login }) => {\n  const { loading, error } = useSelector((state) => ({\n    loading: state.auth.loading,\n    error: state.auth.error,\n  }));\n\n  const dispatch = useDispatch();\n\n  const INITIALSTATE = {\n    username: '',\n    displayName: '',\n    password: '',\n  }\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [isToggled, setToggle] = useState({isToggled:false});\n  const [isToggled2, setToggle2] = useState({isToggled2:false});\n  const [registerState, setRegisterState] = useState({INITIALSTATE})\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    dispatch(actions.login(state));\n    if(error)\n    {\n      setToggle((prevState)=> ({...prevState,isToggled:true}))\n    }\n  };\n\n  const handleRegister = (event) => { \n    event.preventDefault();\n    \n    dispatch(user(registerState));\n    setToggle2((prevState)=> ({...prevState,isToggled2:true}))\n    console.log(registerState)\n  };\n\n  \n  const handleChange = (event) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState((prevState) => ({ ...prevState, [inputName]: inputValue }));\n\n  };\n  \n\n  const handleRegChange = (event) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setRegisterState((prevState) => ({ ...prevState, [inputName]: inputValue }));\n  };\n  // \n  return (\n    <React.Fragment>\n    <div id=\"login\">\n    <div id=\"spaceleft\"></div>\n      <div id=\"logform\">\n      <div id=\"logformborder\">\n      \n      <form id=\"login-form\" onSubmit={handleLogin}>\n      <b><p id=\"log\">Current Users</p></b>\n      <h2 className={isToggled.isToggled?\"showL\":\"hiddenL\"}>user not found . . .</h2>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={state.username}\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={state.password}\n          required\n          onChange={handleChange}\n        />\n        <div>\n        <div id =\"submit2\">\n        <button type=\"submit\" disabled={loading}>\n          Login\n        </button>\n        </div>\n        \n        </div>\n      </form>\n      </div>\n      <p></p>\n    </div>\n    <div id=\"divspace\"></div>\n    <div id=\"regform\">\n      <div id=\"regformborder\">\n      <form id=\"register-form\" onSubmit={handleRegister}>\n      <b><p id=\"create\">Create an Account</p></b>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={registerState.username}\n          autoFocus\n          required\n          onChange={handleRegChange}\n        />\n        <label htmlFor=\"displayName\">Name</label>\n        <input\n          type=\"text\"\n          name=\"displayName\"\n          value={registerState.displayName}\n          autoFocus\n          required\n          onChange={handleRegChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={registerState.password}\n          required\n          onChange={handleRegChange}\n        />\n        <div id =\"submit1\">\n        <button type=\"submit\" disabled={loading}>\n          Register\n        </button>\n        </div>\n        </form>\n        \n        </div>\n        <b><p className={isToggled2.isToggled2?\"showR\":\"hiddenR\"}>Register complete, you can now login.</p></b>\n        </div> \n        \n        <div id=\"spaceright\"></div>\n        </div>\n          \n      {loading && <Loader />}\n     \n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n    </React.Fragment>\n  );\n};\n ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actions } from \"../../redux/actions/auth\";\nimport \"./Menu.css\";\n\nexport const Menu = () => {\n  const { isAuthenticated, username } = useSelector(state => ({ isAuthenticated: !!state.auth.isAuthenticated, username: state.auth.username }));\n  const dispatch = useDispatch();\n  const logout = () => dispatch(actions.logout());\n\n  return (\n    <div id=\"menu\">\n      <div id=\"kwitterhead\">\n        <p>Kwitter</p>\n      </div>\n      <div class=\"ui horizontal list\">\n        <div class=\"item\">\n          <img class=\"ui mini circular image\" src={'/q.png'} />\n          <div class=\"content\">\n            <div class=\"ui sub header\">Shanquetta Pelzer</div>\n            Product Owner\n          </div>\n        </div>\n        <div class=\"item\">\n          <img class=\"ui mini circular image\" src={'/kwitter-user.png'} />\n          <div class=\"content\">\n            <div class=\"ui sub header\">Edward Perkins</div>\n            Scrum Master\n          </div>\n        </div>\n        <div class=\"item\">\n          <img src={'/elijah.jpg'} class=\"ui mini circular image\" />\n          <div class=\"content\">\n            <div class=\"ui sub header\">Elijah Camara</div>\n            QA\n          </div>\n        </div>\n        <div class=\"item\">\n          <img src={'/tune.jpg'} class=\"ui mini circular image\" />\n          <div class=\"content\">\n            <div class=\"ui sub header\">Tuan Wright</div>\n            Developer\n          </div>\n        </div>\n        <div class=\"item\">\n          <img src={\"/charles.jpg\"} class=\"ui mini circular image\" />\n          <div class=\"content\">\n            <div class=\"ui sub header\">Charles Campbell</div>\n            Developer\n          </div>\n        </div>\n      </div>\n\n      <div id='menu-links'>\n        {isAuthenticated ? (\n          <>\n            <Link to={\"/profile/\" + username}>Profile</Link>\n            <Link to=\"/users\">Users</Link>\n            <Link to=\"/feed\">Message Feed</Link>\n            <Link to=\"/\" onClick={logout}>\n              Logout\n            </Link>\n\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};","import React from \"react\";\nimport { LoginFormContainer, MenuContainer } from \"../components\";\nimport \"./Home.css\";\n\nexport const HomeScreen = () => (\n  <>\n    <MenuContainer />\n    <div id=\"div1\">\n    <center><h2 id=\"plat\">Microblogging Platform</h2></center>\n    </div>\n    <LoginFormContainer />\n  </>\n);\n","\nexport const createTimestamp =(messyTimeStamp) =>\n{\n   let date = reformateDate(messyTimeStamp)\n    let time = reformateTime(messyTimeStamp)\n   return({date,time})\n}\n\nconst reformateTime = (messyTime) =>\n{\n    let dateTime = messyTime.split('')\n    let time = dateTime.splice(11,5)\n    let hourArr = time.splice(0,2)\n    let minuteArr = time.splice(1,2)\n    let minute = minuteArr.join('')\n    let hourStr = hourArr.join('')\n    let hour = parseInt(hourStr)\n   \n    let timeOfday =\"\"\n    if(hour > 12)\n    {\n        hour -= 12\n        timeOfday = 'PM'\n    }\n    else{\n        timeOfday = \"AM\"\n    }\n     \n    return (hour+ \":\"+ minute + timeOfday )\n}\n\nconst reformateDate = (messyDate) =>\n{\n   let dateTime = messyDate.split('')\n   let date = dateTime.splice(0,10)\n   let yearArr = date.splice(0,4)\n   let dayArr = date.splice(1,2)\n   date.splice(2,4)\n   let year = yearArr.join('')\n   let day = dayArr.join('')\n   let month = dayArr.join('')\n   month= reformatMonth(month)\n   return(month+\"/\"+day+\"/\"+ year)\n}\n\nconst reformatMonth = (month) =>\n{\n    switch (month) {\n        case '01':\n            \n            month = 'Jan'\n            break;\n        case '02':\n        \n            month = 'Feb'\n            break;\n        case '03':\n    \n            month = 'Mar'\n            break;\n\n        case '04':\n\n            month = 'Apr'\n            break;\n    \n        case '05':\n\n            month = 'May'\n            break;\n\n        case '06':\n\n            month = 'Jun'\n            break;\n\n        case '07':\n\n            month = 'Jul'\n            break;\n\n        case '07':\n\n            month = 'Aug'\n            break;\n\n        \n        case '09':\n            \n            month = 'Sep'\n            break;\n        case '10':\n        \n            month = 'Oct'\n            break;\n\n        case '11':\n    \n            month = 'Nov'\n            break;\n        case '12':\n\n            month = 'Dec'\n            break;\n        default:\n            break;\n    }\n    return month\n}","import React, { useState } from \"react\";\nimport { createTimestamp } from \"../../components/functions/createTimestamp\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteLikes,\n  deleteMessage,\n  profileLikes,\n} from \"../../redux/actions/messages\";\nimport { likes } from \"../../redux/actions/messages\";\nimport { profileDeleteMessage, profileDeleteLikes } from '../../redux/actions/messages'\nexport const Message = props => {\n\n  const dispatch = useDispatch();\n\n  const messagListParams = useSelector(state => state.infiniteScroll);\n\n  const { msgListParams, username } = useSelector((state) =>\n  ({\n    username: state.getUser.username,\n    msgListParams: state.infiniteScroll,\n  }))\n\n  const handleDelete = () => {\n    if (props.profile) {\n      dispatch(profileDeleteMessage(props.msgId, messagListParams, username));\n    }\n    else {\n      dispatch(deleteMessage(props.msgId, messagListParams));\n    }\n  };\n\n  let timestamp = createTimestamp(props.createdAt);\n\n  const [disClick, setDisClick] = useState(13);\n\n  const handleLike = messageId => {\n    dispatch(likes(messageId, msgListParams));\n    if (!props.profile) {\n      dispatch(likes(messageId, msgListParams));\n    } else {\n      dispatch(profileLikes(messageId, msgListParams, username));\n    }\n  };\n\n  let yourLike\n  const handleUnlike = () => {\n    for (let like of props.likes) {\n      if (like.username === username) {\n        yourLike = like.id\n      }\n    }\n    if (!props.profile) {\n      dispatch(deleteLikes(yourLike, msgListParams))\n    } else {\n      dispatch(profileDeleteLikes(yourLike, msgListParams, username));\n    }\n  };\n\n  return (<>\n\n    <div class=\"ui feed\">\n      <div class=\"event\">\n        <div class=\"label\">\n          <img\n            src={props.userPhoto ? `https://kwitter-api.herokuapp.com/users/${props.username}/picture` : '/kwitter-user.png'}\n            width=\"200\"\n            height=\"200\" />\n        </div>\n        <div class=\"content\">\n          <div class=\"summary\">\n            <a class=\"user\">\n              {props.username}\n            </a>\n          </div>\n          <div class=\"summary\">\n            <a class=\"user\">\n            </a> {props.text}\n            <div class=\"date\">\n              {timestamp.time}<span> date:{timestamp.date}</span>\n            </div>\n          </div>\n          <div class=\"meta\">\n            <div class=\"ui labeled button\" tabIndex=\"0\">\n              <button class=\"ui blue button\" onClick={() => handleLike(props.msgId)}> { }\n                <i class=\"heart icon\"></i> Like(s)\n            </button>\n              <a class=\"ui basic blue left pointing label\">\n                {props.likes.length}\n              </a>\n            </div>\n            <div class=\"ui labeled button\" tabIndex=\"0\">\n              <button class=\"ui blue button\" onClick={() => handleUnlike()}>\n                <i class=\"thumbs down icon\"></i> Delete Like(s)\n            </button>\n            </div>\n            <div class=\"ui labeled button\" tabIndex=\"0\">\n              <button class=\"ui red button\" onClick={() => setDisClick(disClick + 1)}>\n                <i class=\"frown icon\"></i> Dislikes\n            </button>\n              <a class=\"ui basic left pointing red label\">\n                {disClick}\n              </a>\n            </div>\n            {username === props.username ? (\n              <div class='ui labeled button' tabIndex='0'>\n                <button\n                  class='ui purple button'\n                  onClick={() => handleDelete(props.msgId)}\n                >\n                  <i class='cross mark icon'></i> Delete Message\n          </button>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  </>)\n}\n","export const ADD_TO_LIST = 'ADD_TO_LIST'\nexport const RESET_LIST = 'RESET_LIST'\n\nexport const infiniteScroll = (amountToAdd) => \n{\n    const payload = amountToAdd\n    \n    return ({type: ADD_TO_LIST, payload})\n    \n}\n\nexport const restInfiniteScroll = (initialSize) =>\n{\n    const payload = initialSize\n    return ({type: RESET_LIST,payload})\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Loader } from \"../loader\";\nimport \"./Profile.css\";\nimport {updateuser} from \"../../redux/actions/user\";\nimport Api from \"../../utils/api\"\nimport { getUserInfo} from '../../redux/actions'\nimport {Message} from '../feed/Message'\nimport {infiniteScroll} from '../../redux/actions/infiniteScroll'\nimport {restInfiniteScroll} from '../../redux/actions/infiniteScroll'\nimport {getMessageListByUser} from '../../redux/actions'\nimport 'semantic-ui-css/semantic.min.css'\nimport {deleteUser} from '../../redux/actions/user'\n\n\nexport const Profile = () => {\n  const INITIALSTATE = {\n    displayName: \"\",\n    about: \"\",\n    password: \"\",\n  };\n\n  const [state, setState] = useState(INITIALSTATE);\n  const [isToggled, setToggle] = useState({isToggled:false});\n  const {\n    username,\n    startingUsername,\n    userPicture,\n    messageList,\n    bio,\n    name,\n    msgListParams,\n    count,\n    loadingUserInfo,\n\n  } = useSelector(state => ({\n    loadingUserInfo:state.getUser.loading,\n    startingUsername: state.auth.username,\n    username: state.getUser.username,\n    userPicture: state.getUser.pictureLocation,\n    name: state.getUser.displayName,\n    bio: state.getUser.about,\n    count: state.getMessageListByUser.count,\n    messageList: state.getMessageListByUser.messages,\n    msgListParams: state.infiniteScroll,\n  }))\n  \n  const dispatch = useDispatch();\n  const picture = useRef(null);\n\n  useEffect(()=>{dispatch(getMessageListByUser({limit:10, offset:0},startingUsername))},[])\n  useEffect(()=>{dispatch(getUserInfo(startingUsername))},[])\n  useEffect(()=>{dispatch(restInfiniteScroll(0))},[])\n\n  const addPic = async (event) => {\n    event.preventDefault();\n    const picdata = new FormData (picture.current);\n    const results = await Api.addPicture( username, picdata );\n    dispatch(getUserInfo(username));\n  };\n\n  \n  const deleteTheUser = () => {\n    dispatch(deleteUser(username));\n  };\n \n  \n  useEffect(()=>{\n    dispatch(getMessageListByUser(msgListParams,username))\n  \n  },[])\n  \n  const handleUpdate = (event) => {\n    event.preventDefault()\n    dispatch(updateuser({...state,username}));\n    setToggle((prevState)=> ({...prevState,isToggled:false}))\n    \n  }\n\n  const handleChange = (event) => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setState((prevState) => ({ ...prevState, [inputName]: inputValue }));\n  };\n\n  const setPic = async event => {\n    event.preventDefault();\n    const picdata = new FormData(picture.current);\n    const results = await Api.getPictures(username, picdata);\n  };\n  \n\n  const handleScroll = (event) => {\n\n    const {scrollHeight,clientHeight,scrollTop} = event.currentTarget\n     \n    if(clientHeight + scrollTop >= scrollHeight && msgListParams.offset < count) {\n      console.log('end')\n      dispatch(infiniteScroll(5))\n      \n      dispatch(getMessageListByUser(msgListParams,username))\n    }\n  }\n  \n   const handleToggle = () =>\n   {\n        setToggle((prevState)=> ({...prevState,isToggled:true}))\n        setState((prevState)=> ({...prevState,INITIALSTATE}))\n   }\n\n  return (\n    <React.Fragment>\n      <div id=\"bigsplit\">\n        <div id=\"smallsplit\">\n          {loadingUserInfo && <Loader/>}\n          <div class=\"ui card\">\n            <div class=\"image\">\n              <img id=\"image2\"\n            src = {userPicture?\"https://kwitter-api.herokuapp.com\" + userPicture:'/kwitter-user.png'}\n            width=\"200\" \n            height=\"200\"/>\n          </div>\n        \n          <div class=\"content\">\n            <a class=\"header\">{name}</a>\n            <div class=\"meta\">\n              <span class=\"date\">SE April 2020</span>\n            </div>\n            <div class=\"description\">\n              {bio}\n            </div>\n          </div>\n        </div>\n      <div/>\n    \n      <button onClick = {handleToggle}className={isToggled.isToggled?\"hidden\":\"show\"}>edit profile</button>\n      <div className ={!isToggled.isToggled?\"hidden\":\"show\"}>\n       <br/>\n        <div id=\"photo\">\n          <h2>Add or Change photo</h2>\n      <form ref={picture} onSubmit={addPic}>\n        <input type='file' name='picture'></input>\n        <br/>\n        <br/>\n        <br/>\n        <button type='submit'>Upload My Picture</button>\n      </form>\n      </div>\n      <br/>\n      <br/>\n      <div id=\"user\">\n        <h2>Update User Info</h2>\n      <form id=\"update-form\" onSubmit={handleUpdate}>\n          <label htmlFor=\"displayName\">New Name:</label>\n          <input\n              type=\"text\"\n              name=\"displayName\"\n              value={state.displayName}\n              autoFocus\n              required\n              onChange={handleChange}\n          />\n          <br/>\n          <label htmlFor=\"password\">New Password:</label>\n          <input\n              type=\"text\"\n              name=\"password\"\n              value={state.password}\n              autoFocus\n              required\n              onChange={handleChange}\n          />\n          <br/>\n          <label htmlFor=\"about\">New Bio:</label>\n          <input\n            type=\"text\"\n            name=\"about\"\n            value={state.about}\n            autoFocus\n            required\n            onChange={handleChange}\n          />\n          <br/>\n          <br/>\n          <button onClick={()=>updateuser(state.displayName, state.password, state.about, username)} type=\"submit\">\n          Update Profile\n          </button> \n        </form>\n        </div>\n        </div>\n        </div>\n      <div>\n        <div id=\"msgtitle\">\n        <center><h2>Your Messages</h2></center>\n        </div>\n        <div className= 'scrollBox' onScroll ={handleScroll}>\n          {messageList.map((message) => (\n                  <Message text={message.text} \n                  username={message.username}\n                  msgId ={message.id}\n                  key = {message.id} \n                  likes = {message.likes}\n                  createdAt ={message.createdAt}\n                  profile ={true}\n                  />\n                  ))}\n        </div>\n      </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { ProfileContainer, MenuContainer } from \"../components\";\nimport api from \"../utils/api\";\nimport { useDispatch } from \"react-redux\"\nimport { Picture } from \"../components/profile/profile\"\n\nconst users = \"user/username\"\n//const dispatch = useDispatch()\n//const getPic = () => dispatch(actions.getPicture(state))\nexport const ProfileScreen = () => (\n  <>\n    <MenuContainer />\n    <div id=\"profile\">\n    {/* <Picture /> */}\n    </div>\n    <h1></h1>\n    {/* <h3>Here is my picture  </h3> */}\n    {/* <Picture /> */}\n    <ProfileContainer />\n  </>\n);\n\n\nexport const MessageScreen = () => (\n  <>\n  <h2>Hello, I'm your messages</h2>\n  </>\n)\n\nexport const UsersScreen = () => (\n  <>\n  <h2>Hello, Im all the users</h2>\n  </>\n)\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = ({ location }) => (\n  <>\n    <p>Page not found for {location.pathname}</p>\n    <Link to=\"/\">Go Home</Link>\n  </>\n);\n\nexport const NotFoundScreen = NotFound;\n","\nimport React from \"react\";\nimport { MenuContainer,FeedContainer  } from \"../components\"\n\nexport const Feed = () => (\n  <>\n    <MenuContainer/>\n    <h2>Kwit Something</h2>\n    <FeedContainer/>\n\n  </>\n);\n\n","import React from \"react\";\nimport { MenuContainer,UserListContainer  } from \"../components\"\n\nexport const UsersList = () => (\n  <>\n    <MenuContainer/>\n    <UserListContainer/>\n\n  </>\n);","import React from \"react\";\nimport ProptTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n// Testing Push\n/*\n * ConnectedRoute is a component that renders Routes for you\n * It uses the auth store in redux to determine if a route should be rendered\n * or redirected else where based on the auth status\n */\nexport function ConnectedRoute({\n  isProtected,\n  redirectIfAuthenticated,\n  component: ComponentToRender,\n  ...rest\n}) {\n  if (!ComponentToRender) {\n    throw new Error(\"ConnectedRoute MUST have a prop named 'component'\");\n  }\n\n  // https://react-redux.js.org/api/hooks#useselector\n  const { isAuthenticated, username } = useSelector((state) => ({\n    username: state.auth.username,\n    isAuthenticated: state.auth.isAuthenticated,\n  }));\n\n  if (redirectIfAuthenticated && isAuthenticated) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) => (\n          <Redirect\n            to={{\n              pathname: `/profile/${username}`,\n              state: { from: location },\n            }}\n          />\n        )}\n      />\n    );\n  }\n\n  if (isProtected === null || (isProtected && isAuthenticated)) {\n    return (\n      <Route\n        {...rest}\n        render={(renderedProps) => <ComponentToRender {...renderedProps} />}\n      />\n    );\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => (\n        <Redirect\n          to={{\n            pathname: `/`,\n            state: { from: location },\n          }}\n        />\n      )}\n    />\n  );\n}\n\nConnectedRoute.defaultProps = {\n  isProtected: null,\n};\n// https://reactjs.org/docs/typechecking-with-proptypes.html\nConnectedRoute.propTypes = {\n  isProtected: ProptTypes.bool,\n  redirectIfAuthenticated: ProptTypes.bool,\n  component: ProptTypes.elementType.isRequired,\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport { HomeScreen, ProfileScreen, NotFoundScreen, Feed, UsersList } from \"../../screens\";\nimport { ConnectedRoute } from \"../connected-route/ConnectedRoute\";\n\n\nexport const Navigation = () => (\n  <BrowserRouter>\n    <Switch>\n      <ConnectedRoute\n        exact\n        path=\"/\"\n        redirectIfAuthenticated\n        component={HomeScreen}\n      />\n      \n      <ConnectedRoute\n        exact\n        isProtected\n        path=\"/feed\"\n        component={Feed}\n      />\n      <ConnectedRoute\n        exact\n        isProtected\n        path=\"/users\"\n        component={UsersList}\n      />\n      <ConnectedRoute\n        exact\n        isProtected\n        path=\"/profile/:username\"\n        component={ProfileScreen}\n      />\n      \n      <ConnectedRoute path=\"*\" component={NotFoundScreen} />\n    </Switch>\n  </BrowserRouter>\n);\n","import React, { useState, useEffect} from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { addMessage, getMessageList } from \"../../redux/actions/messages\";\nimport {Message} from './Message'\nimport {Loader} from '../loader/Loader'\nimport {restInfiniteScroll} from '../../redux/actions/infiniteScroll'\nimport './Message.css'\nimport {infiniteScroll} from '../../redux/actions/infiniteScroll'\n\n\nexport const Feed = () => {\n\n    const dispatch = useDispatch();\n    useEffect(()=>{dispatch(getMessageList({limit:10, offset:0}))},[])\n\n    useEffect(()=>{dispatch(restInfiniteScroll(0))},[])\n    const {messageList,loadingList,msgListParams,count,} = useSelector((state)=>({\n        msgListParams: state.infiniteScroll,\n        messageList: state.getMessageList.messages,\n        loadingList: state.getMessageList.loading,\n        count: state.getMessageList.count\n    })) \n    \n  const initialState = {\n    text: \"\",\n   \n  }\n\n  const [state, setState] = useState(initialState);\n\n  useEffect(()=>{\n    dispatch(getMessageList(msgListParams))\n  },[])\n\n  const handleChange = (event) => {\n    let inputValue = event.target.value;\n    setState((prevState) => ({ ...prevState, text: inputValue }));\n  };\n\n  const postMessage = (event) => {\n    event.preventDefault();\n    dispatch(addMessage(state,msgListParams));\n    setState((prevState) => ({ ...prevState, text: \"\" }))\n  };\n  \n\nconst handleScroll = (event) =>\n   {\n     const{scrollHeight,clientHeight,scrollTop} = event.currentTarget\n     if(clientHeight + scrollTop >= scrollHeight-30 && msgListParams.offset < count)\n     {\n      dispatch(infiniteScroll(10))\n      dispatch(getMessageList(msgListParams)) \n     }\n   } \nreturn (\n  <React.Fragment>\n  <form id=\"feed\" onSubmit={postMessage}>\n      <label htmlFor=\"msg\"></label>\n      <input\n      type=\"text\"\n      name=\"msg\"\n      value={state.msg}\n      autoFocus\n      required\n      onChange={handleChange}\n      />\n      <button type=\"submit\" >\n        send\n      </button>\n  </form>\n  <br/>\n  <br/>\n  <br/>\n  <br/>\n  {loadingList && <Loader/>}\n  <div className= 'scrollBox' onScroll ={handleScroll}>\n  {messageList.map((message) => (\n          <Message text={message.text} \n          username={message.username}\n          msgId ={message.id}\n          key = {message.id} \n          likes = {message.likes}\n          createdAt ={message.createdAt}\n          userPhoto = {message.pictureLocation}\n         \n          />\n  ))}\n  </div>\n  </React.Fragment>\n);\n};\n","import React from \"react\";\nimport './user.css'\n\nexport const User = (props) =>\n{\n    \n    return(\n        <>\n        \n        <div class=\"ui cards\">\n            <div class=\"card\">\n                <div class=\"content\">\n                    <div className = 'photo'>\n                        <img\n                        src={!props.pictureLocation?'/kwitter-user.png':\"https://kwitter-api.herokuapp.com\" + props.pictureLocation}\n                        width='50'\n                        height='50'\n                        />\n                    </div>\n                    <div class=\"header\">{props.username}</div>\n                        <div class=\"meta\">{props.displayName}</div>\n                            <div class=\"description\">\n                                    {props.about}\n                            </div>\n                        </div>\n                    </div>\n        </div>\n            </>\n    )\n}","import React, { useEffect} from \"react\";\nimport {  useDispatch,useSelector} from \"react-redux\";\nimport {getUserList} from '../../redux/actions/user'\nimport { User } from \"./User\";\nimport {infiniteScroll} from '../../redux/actions/infiniteScroll'\nimport {restInfiniteScroll} from '../../redux/actions/infiniteScroll'\nimport './user.css'\nimport {Loader} from '../loader/Loader'\nexport const  UsersList = () =>\n{\n    const dispatch = useDispatch()\n    useEffect(()=>{dispatch(restInfiniteScroll(0))},[])\n    useEffect(()=>{dispatch(getUserList({limit:10, offset:0}))},[])\n    const {userList,userListParams,userListLoader} = useSelector((state)=>({\n        userList: state.userList.users,\n        userListParams: state.infiniteScroll,\n        userListLoader: state.userList.loading,\n    }))\n    \n    \n    const handleScroll = (event) =>\n   {\n     \n     const {scrollHeight,clientHeight,scrollTop} = event.currentTarget\n     if(clientHeight + scrollTop >= scrollHeight-30)\n     {\n       dispatch(infiniteScroll(10))\n       dispatch(getUserList(userListParams))\n     }\n   }\n\n    return(\n        <>\n        {userListLoader && <Loader/>}\n          <div className= 'scrollBox' onScroll ={handleScroll}>\n            {userList.map((user) => (\n          <User pictureLocation={user.pictureLocation} \n          username={user.username}\n          displayName ={user.displayName}\n          key = {user.username} \n          about = {user.about}\n          />\n\n            ))}\n        </div>\n        </>\n    )\n    \n}\n","import { LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from \"../actions\";\n\n// INITIAL STATE\nconst INITIAL_STATE = {\n  isAuthenticated: \"\",\n  username: \"\",\n  loading: false,\n  error: \"\",\n};\n\nexport const authReducer = (state = { ...INITIAL_STATE }, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...INITIAL_STATE,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      const { username, token } = action.payload;\n      return {\n        ...INITIAL_STATE,\n        isAuthenticated: token,\n        username,\n        loading: false,\n        error: \"\",\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...INITIAL_STATE,\n        error: action.payload,\n        loading: false,\n      };\n    case LOGOUT:\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_USER,\n  ADD_USER_FAIL,\n  ADD_USER_LOAD,\n  DELETE_USER,\n  DELETE_USER_FAIL,\n  DELETE_USER_LOAD,\n\n \n} from \"../actions\";\n\nconst INITIAL_STATE = {\n  username: \"\",\n  displayname: \"\",\n  loading: false,\n  error: \"\",\n  deletedMsg: '',\n};\n\nexport const defaultUserReducer = (state = { ...INITIAL_STATE }, action) => {\n  switch (action.type) {\n    case ADD_USER_LOAD:\n      return {\n        ...INITIAL_STATE,\n        loading: true,\n      };\n      case DELETE_USER_LOAD:\n        return {\n          ...INITIAL_STATE,\n          loading: true,\n        };\n    case ADD_USER:\n      const { username, displayname } = action.payload.user;\n      return {\n        ...INITIAL_STATE,\n        username,\n        displayname,\n        loading: false,\n      };\n      case DELETE_USER:\n        return{\n          ...INITIAL_STATE,\n          deletedMsg: action.payload,\n        };\n        \n    case ADD_USER_FAIL:\n      return {\n        ...INITIAL_STATE,\n        error: action.payload,\n        loading: false,\n      };\n      case  DELETE_USER_FAIL:\n      return {\n        ...INITIAL_STATE,\n        error: action.payload,\n        loading: false,\n      };\n    \n\n    default:\n      return state;\n  }\n};\n","import { UPDATE_USER, UPDATE_USER_FAIL, UPDATE_USER_LOAD } from '../actions'\n\n\nconst INITIAL_STATE = {\n    password: \"\",\n    about: \"\",\n    displayname: \"\",\n    loading: false,\n    error: \"\"\n}\n\nexport const updateUserReducer = (state = { ...INITIAL_STATE }, action) => {\n    switch (action.type) {\n      case UPDATE_USER_LOAD:\n        return {\n          ...INITIAL_STATE,\n          loading: true,\n        };\n      case UPDATE_USER:\n        const data = action.payload.updateuser;\n        return {\n          ...INITIAL_STATE,\n          data,\n          loading: false,\n        };\n      case UPDATE_USER_FAIL:\n        return {\n          ...INITIAL_STATE,\n          error: action.payload,\n          loading: false,\n        };\n      \n      default: return state;\n    }\n  };\n","\nimport { LIKE_SUCCESS, LIKE_FAILURE, DELETE_LIKE, DELETE_SUCCESS,DELETE_FAILURE} from '../actions/messages'\nimport { LIKES } from '../actions/likes'\nconst DEFAULT_STATE = {\n  likes: [\n    {\n      \"id\": 0,\n      \"username\": \"\",\n      \"messageId\": 0,\n      \"createdAt\": \"2020-09-03T17:10:37.7422\"\n    }\n  ]\n}\n\nexport const likesReducer = (state = {...DEFAULT_STATE}, action) => {\n  switch(action.type) {\n    case LIKES: \n      const { messageId } = action.payload.like\n      return {\n        ...DEFAULT_STATE, \n        messageId\n      };\n    case LIKE_SUCCESS: \n      const { memberId } = action.payload;\n      return {\n        ...DEFAULT_STATE, \n        memberId\n      };\n    case DELETE_LIKE:\n      const  likeId  = action.payload\n      return {\n        ...DEFAULT_STATE,\n        likeId\n      };\n    case DELETE_SUCCESS: \n      return {\n        ...DEFAULT_STATE, \n        likeId\n      };\n    case DELETE_FAILURE:\n      return {\n        ...DEFAULT_STATE, \n        error: action.payload\n    };\n    default:\n      return state;\n  }\n};\n\n\n\nexport default likesReducer","\nimport { ADD_MESSAGE, ADD_MESSAGE_FAIL,ADD_MESSAGE_LOAD } from \"../actions\";\n\nconst INITIAL_STATE = {\n  id: 0,\n  text: \"\",\n  username: \"\",\n  createdAT: \"\",\n  likes: [\n    {\n      \"id\": 0,\n      \"username\": \"\",\n      \"messageId\": 0,\n      \"createdAt\": \"2020-09-03T17:10:37.7422\",\n    },\n  ],\n\n  loading: false,\n  error: \"\",\n  delete_message: \"\",\n};\n\nexport const addMessageReducer = (state = { ...INITIAL_STATE }, action) => {\n    switch (action.type) {\n      case ADD_MESSAGE_LOAD :\n        return{\n          ...INITIAL_STATE,\n          loading: true,\n        };\n      case ADD_MESSAGE:\n        const {id, text, username, createdAT, likes } = action.payload.message;\n        return {\n          ...INITIAL_STATE,\n          id,\n          text,\n          username,\n          createdAT,\n          likes,\n          loading: false\n\n        };\n        \n\n    case ADD_MESSAGE_FAIL:\n      return {\n        ...INITIAL_STATE,\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MESSAGE_LIST,\n  GET_MESSAGE_LIST_LOAD,\n  GET_MESSAGE_LIST_FAIL,\n  DELETE_MESSAGE,\n  DELETE_MESSAGE_LOAD,\n  DELETE_MESSAGE_FAIL,\n\n} from '../actions'\n\n\n\nconst INITIAL_STATE = {\n    loading: false,\n    error: \"\",\n    messages: [],\n    count: 0,\n  };\n\n\nexport const getMessageListReducer = (state = { ...INITIAL_STATE }, action) => {\n    switch (action.type) {\n      case GET_MESSAGE_LIST_LOAD:\n        return{\n          ...INITIAL_STATE,\n          loading: true,\n        }\n        case DELETE_MESSAGE_LOAD:\n        return{\n          ...INITIAL_STATE,\n          loading: true,\n        }\n      case GET_MESSAGE_LIST:\n          const {messages, count} = action.payload\n        \n        return {\n          ...INITIAL_STATE,\n          loading: false,\n          messages: messages,\n          count: count,\n        };\n\n        case DELETE_MESSAGE:\n          const {id} = action.payload\n\n        return {\n          ...INITIAL_STATE,\n          loading: false,\n        };\n\n      case GET_MESSAGE_LIST_FAIL:\n        return {\n          ...INITIAL_STATE,\n          error: action.payload,\n          loading: false,\n        };\n        case DELETE_MESSAGE_FAIL:\n        return {\n          ...INITIAL_STATE,\n          error: action.payload,\n          loading: false,\n        };\n      \n        default:\n        return state;\n    }\n  };","import {GET_USER,  GET_USER_FAIL, GET_USER_LOAD} from '../actions'\n\nconst INITIAL_STATE = {\n    pictureLocation: \"\",\n    username: \"\",\n    displayName: \"\",\n    about: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n    loading: false,\n    error: \"\",\n  };\n\n\nexport const getUserReducer = (state = { ...INITIAL_STATE }, action) => {\n    switch (action.type) {\n      case GET_USER_LOAD:\n        return {\n          ...INITIAL_STATE,\n          loading: true,\n        };\n      case GET_USER:\n        const { pictureLocation,username, displayName,about,createdAt,updatedAt} = action.payload.user;\n        return {\n          ...INITIAL_STATE,\n          pictureLocation,\n          username,\n          displayName,\n          about,\n          createdAt,\n          updatedAt,\n          loading: false,\n          \n        };\n      case GET_USER_FAIL:\n        return {\n          ...INITIAL_STATE,\n          error: action.payload,\n          loading: false,\n        };\n      \n      default:\n        return state;\n    }\n  };","import {ADD_TO_LIST,RESET_LIST} from '../actions/infiniteScroll'\n\nconst INITIAL_STATE = {\n  \n   limit: 10,\n   offset: 0,\n  };\n\n\nexport const infiniteScrollReducer = (state = {...INITIAL_STATE},action) =>\n{\n    switch (action.type) {\n        case ADD_TO_LIST:\n          return {\n            ...INITIAL_STATE,\n            offset: state.offset + action.payload\n          };\n          case RESET_LIST:\n              return{\n                ...INITIAL_STATE,\n                offset: action.payload\n              }\n        default:\n        return state\n    }\n}","import {GET_MESSAGE_LIST_USER,\n  GET_MESSAGE_LIST_USER_FAIL,\n  GET_MESSAGE_LIST_USER_LOAD,\n  DELETE_MESSAGE} from '../actions'\n\n\nconst INITIAL_STATE = {\n    loading: false,\n    error: \"\",\n    messages: [],\n    count: 0,\n  };\n\n\nexport const getMessageListByUserReducer = (state = { ...INITIAL_STATE }, action) => {\n    switch (action.type) {\n      case GET_MESSAGE_LIST_USER_LOAD:\n        return{\n          ...INITIAL_STATE,\n          loading: true,\n        }\n      case GET_MESSAGE_LIST_USER:\n          const {messages,count} = action.payload\n        \n        return {\n          ...INITIAL_STATE,\n          loading: false,\n          messages: messages,\n          count: count,\n        };\n        case DELETE_MESSAGE:\n          const {id} = action.payload\n        \n        return {\n          ...INITIAL_STATE,\n          loading: false,\n          \n          \n        };\n\n      case GET_MESSAGE_LIST_USER_FAIL:\n        return {\n          ...INITIAL_STATE,\n          error: action.payload,\n          loading: false,\n        };\n      \n      default:\n        return state;\n    }\n  };"," \nimport {GET_USER_LIST,GET_USER_LIST_LOAD,GET_USER_LIST_FAIL} from '../actions'\n\nconst INITIAL_STATE = {\n  \n    loading: false,\n    error:\"\",\n    users: [],\n   };\n \n \n export const getUserListReducer = (state = {...INITIAL_STATE},action) =>\n {\n     switch (action.type) {\n        case GET_USER_LIST_LOAD:\n            return {\n              ...INITIAL_STATE,\n              loading: true\n            };\n         case GET_USER_LIST:\n             const {users}  = action.payload\n           return {\n             ...INITIAL_STATE,\n             users: users\n           };\n           case GET_USER_LIST_FAIL:\n               return{\n                 ...INITIAL_STATE,\n                 error: action.payload\n               }\n         default:\n         return state\n     }\n }","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth\";\nimport { picReducer } from \"./pic\"\nimport { defaultUserReducer} from './user'\nimport { updateUserReducer } from './updateUser'\nimport { likesReducer } from './likes'\nimport {addMessageReducer} from './messages'\nimport {getMessageListReducer} from './messagesList'\nimport {getUserReducer} from './getUser'\nimport {infiniteScrollReducer} from './infiniteScroll'\nimport {getMessageListByUserReducer} from './getMessageListByUser'\nimport { addLikeReducer } from './addLike'\nimport {getUserListReducer} from './getUserList'\nexport default combineReducers({ \n  pic:picReducer,\n  userList:getUserListReducer,\n  getMessageListByUser:getMessageListByUserReducer,\n  auth: authReducer,\n  infiniteScroll: infiniteScrollReducer,\n  likes: likesReducer, \n  addUser: defaultUserReducer,\n  updateUser: updateUserReducer,\n  addMsg: addMessageReducer,\n  getMessageList: getMessageListReducer,\n  user: defaultUserReducer,\n  pic: picReducer,\n  getUser:getUserReducer,\n  addLike:addLikeReducer,\n});\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\n  const persistor = persistStore(store);\n  return { store, persistor };\n}","// @ts-nocheck\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Navigation } from \"./components\";\nimport configureStore from \"./redux/configureStore\";\n\nconst { store, persistor } = configureStore();\n//branch management\nconst KWITTER = {\n  store,\n  persistor,\n};\n\nwindow.KWITTER = KWITTER;\n\nexport const App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Navigation />\n    </PersistGate>\n  </Provider>\n);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { App } from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}